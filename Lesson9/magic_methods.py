# створимо клас крапки
class Point:
# створимо конструктор
    def __init__(self, x, y):

        if type(x) == int: # тоді ми можемо це перевизначати - переопределять. Якщо х буде об'єктом класу int
            self.x = x
            self.y = y

# за виведення об'єкту на екран відповідає спеціальний магічний метод __str__
# магічний метод __str__ повертає рядок
    def __str__(self):
        return f'x - {self.x}, y - {self.y}' # return має бути обов'язково

# Магические методы сравнения
# __eq__(self, other)
# Определяет поведение оператора равенства, ==.
    def __eq__(self, other):
# приймає на вхід два аргументи: self - об'єкт а, який знаходиться зліва від == , other - об'єкт b, який знаходиться з права від ==
        return all([self.x == other.x, self.y == other.y]) # all функція яка приймає список умов
# порівнюємо х в двох крапках, порівнюємо у в двох крапках
# == для int визначене Python

# додаю х і у двох крапок і отримую третю крапку
# Арифметические операторы
# __add__(self, other)
# Сложение.

# зліва від + self, з права від + other
    def __add__(self, other):
        return (self.x + other.x, self.y + other.y) # повертаю кортеж, дужки () можна забрати


# хочу порівняти між собою дві крапки
a = Point(10, 20)

b = Point(10, 20)

print(a == b)

r = a + b
print(r)

